/**
 * GetCandy
 * The GetCandy API
 *
 * The version of the OpenAPI document: 0.12.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { RecycleBinCollection } from '../models';
import { RecycleBinResponse } from '../models';
/**
 * RecycleBinApi - axios parameter creator
 * @export
 */
export declare const RecycleBinApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Remove a recycle bin item  > This will also hard delete the model associated with the recycle bin item, this action is not reversable and will cause loss of data.
     * @summary Delete item
     * @param {string} itemId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteRecycleBinItemId: (itemId: string, options?: any) => Promise<RequestArgs>;
    /**
     * Returns a paginated list of all recycle bin items.
     * @summary Get records
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getRecycleBin: (options?: any) => Promise<RequestArgs>;
    /**
     * Retrieves a recycle bin item.
     * @summary Get item
     * @param {string} itemId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getRecycleBinItemId: (itemId: string, options?: any) => Promise<RequestArgs>;
};
/**
 * RecycleBinApi - functional programming interface
 * @export
 */
export declare const RecycleBinApiFp: (configuration?: Configuration) => {
    /**
     * Remove a recycle bin item  > This will also hard delete the model associated with the recycle bin item, this action is not reversable and will cause loss of data.
     * @summary Delete item
     * @param {string} itemId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteRecycleBinItemId(itemId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Returns a paginated list of all recycle bin items.
     * @summary Get records
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getRecycleBin(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RecycleBinCollection>>;
    /**
     * Retrieves a recycle bin item.
     * @summary Get item
     * @param {string} itemId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getRecycleBinItemId(itemId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RecycleBinResponse>>;
};
/**
 * RecycleBinApi - factory interface
 * @export
 */
export declare const RecycleBinApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Remove a recycle bin item  > This will also hard delete the model associated with the recycle bin item, this action is not reversable and will cause loss of data.
     * @summary Delete item
     * @param {string} itemId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteRecycleBinItemId(itemId: string, options?: any): AxiosPromise<void>;
    /**
     * Returns a paginated list of all recycle bin items.
     * @summary Get records
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getRecycleBin(options?: any): AxiosPromise<RecycleBinCollection>;
    /**
     * Retrieves a recycle bin item.
     * @summary Get item
     * @param {string} itemId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getRecycleBinItemId(itemId: string, options?: any): AxiosPromise<RecycleBinResponse>;
};
/**
 * RecycleBinApi - object-oriented interface
 * @export
 * @class RecycleBinApi
 * @extends {BaseAPI}
 */
export declare class RecycleBinApi extends BaseAPI {
    /**
     * Remove a recycle bin item  > This will also hard delete the model associated with the recycle bin item, this action is not reversable and will cause loss of data.
     * @summary Delete item
     * @param {string} itemId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RecycleBinApi
     */
    deleteRecycleBinItemId(itemId: string, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     * Returns a paginated list of all recycle bin items.
     * @summary Get records
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RecycleBinApi
     */
    getRecycleBin(options?: any): Promise<import("axios").AxiosResponse<RecycleBinCollection, any>>;
    /**
     * Retrieves a recycle bin item.
     * @summary Get item
     * @param {string} itemId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RecycleBinApi
     */
    getRecycleBinItemId(itemId: string, options?: any): Promise<import("axios").AxiosResponse<RecycleBinResponse, any>>;
}
