/**
 * GetCandy
 * The GetCandy API
 *
 * The version of the OpenAPI document: 0.12.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { InlineObject35 } from '../models';
import { InlineObject36 } from '../models';
import { TaxCollection } from '../models';
import { TaxResponse } from '../models';
/**
 * TaxesApi - axios parameter creator
 * @export
 */
export declare const TaxesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Delete a tax record by it\'s ID.
     * @summary Delete tax record
     * @param {string} taxId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteTaxesTaxId: (taxId: string, options?: any) => Promise<RequestArgs>;
    /**
     * Get a paginated list of taxes
     * @summary Get taxes
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTaxes: (options?: any) => Promise<RequestArgs>;
    /**
     * Get a tax record by it\'s ID
     * @summary Get tax record
     * @param {string} taxId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTaxesTaxId: (taxId: string, options?: any) => Promise<RequestArgs>;
    /**
     * Create a new tax resource.
     * @summary Create tax
     * @param {InlineObject35} [inlineObject35]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postTaxes: (inlineObject35?: InlineObject35, options?: any) => Promise<RequestArgs>;
    /**
     * Update a tax record by it\'s ID
     * @summary Update tax record
     * @param {string} taxId
     * @param {InlineObject36} [inlineObject36]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    putTaxesTaxId: (taxId: string, inlineObject36?: InlineObject36, options?: any) => Promise<RequestArgs>;
};
/**
 * TaxesApi - functional programming interface
 * @export
 */
export declare const TaxesApiFp: (configuration?: Configuration) => {
    /**
     * Delete a tax record by it\'s ID.
     * @summary Delete tax record
     * @param {string} taxId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteTaxesTaxId(taxId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Get a paginated list of taxes
     * @summary Get taxes
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTaxes(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TaxCollection>>;
    /**
     * Get a tax record by it\'s ID
     * @summary Get tax record
     * @param {string} taxId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTaxesTaxId(taxId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TaxResponse>>;
    /**
     * Create a new tax resource.
     * @summary Create tax
     * @param {InlineObject35} [inlineObject35]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postTaxes(inlineObject35?: InlineObject35, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TaxResponse>>;
    /**
     * Update a tax record by it\'s ID
     * @summary Update tax record
     * @param {string} taxId
     * @param {InlineObject36} [inlineObject36]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    putTaxesTaxId(taxId: string, inlineObject36?: InlineObject36, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TaxResponse>>;
};
/**
 * TaxesApi - factory interface
 * @export
 */
export declare const TaxesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Delete a tax record by it\'s ID.
     * @summary Delete tax record
     * @param {string} taxId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteTaxesTaxId(taxId: string, options?: any): AxiosPromise<void>;
    /**
     * Get a paginated list of taxes
     * @summary Get taxes
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTaxes(options?: any): AxiosPromise<TaxCollection>;
    /**
     * Get a tax record by it\'s ID
     * @summary Get tax record
     * @param {string} taxId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTaxesTaxId(taxId: string, options?: any): AxiosPromise<TaxResponse>;
    /**
     * Create a new tax resource.
     * @summary Create tax
     * @param {InlineObject35} [inlineObject35]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postTaxes(inlineObject35?: InlineObject35, options?: any): AxiosPromise<TaxResponse>;
    /**
     * Update a tax record by it\'s ID
     * @summary Update tax record
     * @param {string} taxId
     * @param {InlineObject36} [inlineObject36]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    putTaxesTaxId(taxId: string, inlineObject36?: InlineObject36, options?: any): AxiosPromise<TaxResponse>;
};
/**
 * TaxesApi - object-oriented interface
 * @export
 * @class TaxesApi
 * @extends {BaseAPI}
 */
export declare class TaxesApi extends BaseAPI {
    /**
     * Delete a tax record by it\'s ID.
     * @summary Delete tax record
     * @param {string} taxId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TaxesApi
     */
    deleteTaxesTaxId(taxId: string, options?: any): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     * Get a paginated list of taxes
     * @summary Get taxes
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TaxesApi
     */
    getTaxes(options?: any): Promise<import("axios").AxiosResponse<TaxCollection, any>>;
    /**
     * Get a tax record by it\'s ID
     * @summary Get tax record
     * @param {string} taxId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TaxesApi
     */
    getTaxesTaxId(taxId: string, options?: any): Promise<import("axios").AxiosResponse<TaxResponse, any>>;
    /**
     * Create a new tax resource.
     * @summary Create tax
     * @param {InlineObject35} [inlineObject35]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TaxesApi
     */
    postTaxes(inlineObject35?: InlineObject35, options?: any): Promise<import("axios").AxiosResponse<TaxResponse, any>>;
    /**
     * Update a tax record by it\'s ID
     * @summary Update tax record
     * @param {string} taxId
     * @param {InlineObject36} [inlineObject36]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TaxesApi
     */
    putTaxesTaxId(taxId: string, inlineObject36?: InlineObject36, options?: any): Promise<import("axios").AxiosResponse<TaxResponse, any>>;
}
